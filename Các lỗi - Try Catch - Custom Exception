
package com.javaweb.api;

import java.util.ArrayList;
import java.util.List;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.javaweb.Beans.BuildingDTO;
import com.javaweb.Beans.ErrorResponseDTO;

@RestController
public class BuildingAPI {

    @GetMapping(value="/api/building/")

    public Object getBuilding(@RequestParam(value="name",required=false) String nameBuilding,
    						   @RequestParam(value="numberOfBasement",required=false) Integer numberOfBasement,
    						   @RequestParam(value="ward",required=false) String ward
    		) {
    	try {
    		System.out.print(5/0);    	
    	}
    	catch(Exception e) {
    		ErrorResponseDTO errorResponseDTO = new ErrorResponseDTO();
    		errorResponseDTO.setError(e.getMessage());
    		List<String>details=new ArrayList<>();
    		details.add("Không chia được cho 0");
    		errorResponseDTO.setDetail(details);
    		return errorResponseDTO;
//    		System.out.print(e.getMessage());
    	}
        List<BuildingDTO> listBuildings = new ArrayList<>();
        BuildingDTO buildingDTO1 = new BuildingDTO();
        buildingDTO1.setName("ABC Building");
        buildingDTO1.setNumberOfBasement(3);
        buildingDTO1.setWard("Tan Mai");
        BuildingDTO buildingDTO2 = new BuildingDTO();
        buildingDTO2.setName("ACM Tower");
        buildingDTO2.setNumberOfBasement(2);
        buildingDTO2.setWard("Da Cao");
        listBuildings.add(buildingDTO1);
        listBuildings.add(buildingDTO2);
        return listBuildings;
    }
    
    @PostMapping(value="/api/building/")
    public BuildingDTO getBuilding2(@RequestBody BuildingDTO buildingDTO) {
    		return buildingDTO;
    }
    @DeleteMapping(value="/api/building/{id}/{name}")
    public void deleteBuilding(@PathVariable Integer id,
    		@PathVariable String name,
    		@RequestParam(value="ward",required=false) String ward
    		) {
    		System.out.print("Đã xóa tòa nhà có id: "+id+" ten: "+name);   
    }
   
}
vẫn báo request successfull 200 ok
return{
    "error": "/ by zero",
    "detail": [
        "Không chia được cho 0"
    ]
}
----- Customer exception -----

@PostMapping(value="/api/building/")
    public Object getBuilding(@RequestBody BuildingDTO building) {
    	try {
    		valiDate(building);
    	}
    	catch(Exception e) {
    		ErrorResponseDTO errorResponseDTO = new ErrorResponseDTO();
    		errorResponseDTO.setError(e.getMessage());
    		List<String>details=new ArrayList<>();
    		details.add("Check again name or numberOfBasement becauseof NULL");
    		errorResponseDTO.setDetail(details);
    		return errorResponseDTO;
    	}
	return null;

    }
public void valiDate(BuildingDTO buildingDTO)throws FieldRequiredException {
	if(buildingDTO.getName()==null||buildingDTO.getName().equals("")||buildingDTO.getNumberOfBasement()==null) {
		throw new FieldRequiredException("name or numberOfBasement is null");
	}
}

-- FieldRequiredException.java
package com.javaweb.customerexception;

public class FieldRequiredException extends Exception{
	public FieldRequiredException(String s) {
		super(s);
		// TODO Auto-generated constructor stub
	}

	public FieldRequiredException(String message, Throwable cause, boolean enableSuppression,
			boolean writableStackTrace) {
		super(message, cause, enableSuppression, writableStackTrace);
		// TODO Auto-generated constructor stub
	}

	public FieldRequiredException(String message, Throwable cause) {
		super(message, cause);
		// TODO Auto-generated constructor stub
	}

	public FieldRequiredException(Throwable cause) {
		super(cause);
		// TODO Auto-generated constructor stub
	}
}

-- ErrorResponseDTO.java
package com.javaweb.Beans;

import java.util.ArrayList;
import java.util.List;

public class ErrorResponseDTO {
	private String error;
	private List<String>detail=new ArrayList<String>();
	public String getError() {
		return error;
	}
	public void setError(String error) {
		this.error = error;
	}
	public List<String> getDetail() {
		return detail;
	}
	public void setDetail(List<String> detail) {
		this.detail = detail;
	}
	
}


