https://www.baeldung.com/jpa-hibernate-persistence-context
- Reference Documentation:
https://docs.spring.io/spring-data/data-jpa/docs/1.4.x/reference/htmlsingle/#repositories.query-methods
- ORM:
ORM l√† 1 k·ªπ thu·∫≠t l·∫≠p tr√¨nh gi√∫p √°nh x·∫° c√°c record d·ªØ li·ªáu trong h·ªá qu·∫£n tr·ªã c∆° s·ªü d·ªØ li·ªáu sang d·∫°ng ƒë·ªëi t∆∞·ª£ng ƒëang ƒë·ªãnh nghƒ©a trong c√°c class
https://viblo.asia/p/object-relational-mapping-djeZ1PQ3KWz

https://www.tutorialspoint.com/jpa/jpa_architecture.htm
https://www.baeldung.com/jpql-hql-criteria-query
https://stackoverflow.com/questions/50322550/hibernate-dialect-for-mysql-8

 L√†m vi·ªác v·ªõi JPA c√≥ 2 c√°ch ch√≠nh:
- JPQL (Java Persistence Query Language) : Ng√¥n ng·ªØ truy v·∫•n h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng (Object-Oriented Query Language).
+ S·ª≠ d·ª•ng ho√†n to√†n v·ªõi c√°c ƒë·ªëi t∆∞·ª£ng Entity trong Java.
+ Truy v·∫•n mang t√≠nh h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng, kh√¥ng ph·ª• thu·ªôc v√†o c·∫•u tr√∫c b·∫£ng csdl, Khi ch·∫°y, Hibernate/EclipseLink s·∫Ω d·ªãch JPQL th√†nh SQL g·ªëc ph√π h·ª£p v·ªõi DB b·∫°n d√πng..
+ VD: String sql = "FROM BuildingEntity b";
      Query query = entityManager.createQuery(sql,BuildingEntity.class);
	  return query.getResultList();
üëâ ·ªû ƒë√¢y:
+ BuildingEntity l√† t√™n Entity class.
+ b.name l√† thu·ªôc t√≠nh trong class BuildingEntity.
+ Kh√¥ng quan t√¢m b·∫£ng th·∫≠t trong DB t√™n g√¨ (building, tbl_building, ...).

- Native Query
+ Vi·∫øt truy v·∫•n SQL thu·∫ßn, g·∫ßn gi·ªëng nh∆∞ c√°ch l√†m vi·ªác tr·ª±c ti·∫øp v·ªõi c∆° s·ªü d·ªØ li·ªáu.
+ D·ªÖ d√†ng t·∫≠n d·ª•ng c√°c t√≠nh nƒÉng ƒë·∫∑c th√π c·ªßa h·ªá qu·∫£n tr·ªã c∆° s·ªü d·ªØ li·ªáu.
+ VD: String sql = "FROM BuildingEntity b WHERE b.name like '%building%";
	  Query query = entityManager.createNativeQuery(sql,BuildingEntity.class);
	  return query.getResultList();
üëâ ·ªû ƒë√¢y:
+ building l√† t√™n b·∫£ng trong DB.
+ name l√† t√™n c·ªôt th·∫≠t trong b·∫£ng.
+ C√¢u query ph·ª• thu·ªôc v√†o lo·∫°i DB (MySQL, Oracle, PostgreSQL‚Ä¶).
---- Persistent Context
- M·ªôt instance c·ªßa EntityManager ƒë∆∞·ª£c g·∫Øn v·ªõi m·ªôt persistence context. Persistence context l√† t·∫≠p h·ª£p c√°c entity, trong ƒë√≥ m·ªói ƒë·ªãnh danh entity ch·ªâ t·ªìn t·∫°i duy nh·∫•t m·ªôt instance. 
B√™n trong persistence context, c√°c entity v√† v√≤ng ƒë·ªùi c·ªßa ch√∫ng ƒë∆∞·ª£c qu·∫£n l√Ω. 
EntityManager API ƒë∆∞·ª£c d√πng ƒë·ªÉ t·∫°o, x√≥a entity, t√¨m ki·∫øm theo kh√≥a ch√≠nh, v√† th·ª±c hi·ªán query: persist(), merge(), remove(), find(), createQuery()
üëâPersistence context l√† b·ªô nh·ªõ ƒë·ªám c·∫•p m·ªôt (first-level cache), n∆°i t·∫•t c·∫£ c√°c entity ƒë∆∞·ª£c l·∫•y ra t·ª´ c∆° s·ªü d·ªØ li·ªáu ho·∫∑c ƒë∆∞·ª£c l∆∞u v√†o c∆° s·ªü d·ªØ li·ªáu. N√≥ n·∫±m ·ªü gi·ªØa ·ª©ng d·ª•ng c·ªßa ch√∫ng ta v√† t·∫ßng l∆∞u tr·ªØ d·ªØ li·ªáu
üëâPersistence context theo d√µi m·ªçi thay ƒë·ªïi ƒë∆∞·ª£c th·ª±c hi·ªán tr√™n managed entity. N√≥ theo d√µi thay ƒë·ªïi c·ªßa entity. Khi transaction k·∫øt th√∫c, thay ƒë·ªïi n√†y s·∫Ω ƒë∆∞·ª£c flush (ghi ra) v√†o database
üëâPersistence Context ch√≠nh l√† n∆°i Hibernate/JPA gi·ªØ c√°c entity ƒëang ƒë∆∞·ª£c qu·∫£n l√Ω, ƒë·∫£m b·∫£o ch√∫ng ƒë·ªìng b·ªô v·ªõi database.
üëâEntityManager l√† interface cho ph√©p ch√∫ng ta t∆∞∆°ng t√°c v·ªõi persistence context. B·∫•t c·ª© khi n√†o ch√∫ng ta s·ª≠ d·ª•ng EntityManager, th·ª±c ch·∫•t ch√∫ng ta ƒëang l√†m vi·ªác v·ªõi persistence context.

üü¢ Flush l√† g√¨?
Flush = qu√° tr√¨nh ƒë·ªìng b·ªô (synchronize) tr·∫°ng th√°i c·ªßa c√°c entity trong Persistence Context (b·ªô nh·ªõ t·∫°m/first-level cache) xu·ªëng c∆° s·ªü d·ªØ li·ªáu (DB).
üëâƒë·∫©y c√°c thay ƒë·ªïi t·ª´ Persistence Context ‚Üí DB.

üü¢ persist l√† g√¨?
persist() l√† ph∆∞∆°ng th·ª©c c·ªßa EntityManager d√πng ƒë·ªÉ l∆∞u m·ªôt entity m·ªõi v√†o persistence context (nghƒ©a l√† ƒë∆∞a entity v√†o tr·∫°ng th√°i Managed).
Khi g·ªçi persist(), entity ch∆∞a ch·∫Øc ƒë√£ ƒë∆∞·ª£c ghi ngay xu·ªëng database, m√† n√≥ s·∫Ω ƒë∆∞·ª£c qu·∫£n l√Ω trong Persistence Context tr∆∞·ªõc.
- C√≥ 2 lo·∫°i:
‚ù§Ô∏è Transaction-scoped persistence context:
G·∫Øn li·ªÅn v·ªõi m·ªôt transaction (persistence context ƒë∆∞·ª£c t·∫°o khi transaction b·∫Øt ƒë·∫ßu v√† b·ªã h·ªßy khi transaction k·∫øt th√∫c (commit/rollback))
Khi transaction k·∫øt th√∫c, c√°c entity trong persistence context ƒë∆∞·ª£c flush xu·ªëng DB.
N·∫øu c√≥ persistence context ƒëang t·ªìn t·∫°i, n√≥ s·∫Ω ƒë∆∞·ª£c d√πng l·∫°i; n·∫øu kh√¥ng, EntityManager s·∫Ω t·∫°o m·ªõi.
M·∫∑c ƒë·ªãnh lo·∫°i persistence context l√† PersistenceContextType.TRANSACTION. Vi·∫øt g·ªçn: @PersistenceContext:
‚ù§Ô∏è Extended-scoped persistence context:
G·∫Øn v·ªõi v√≤ng ƒë·ªùi EntityManager/bean -> C√≥ th·ªÉ t·ªìn t·∫°i qua nhi·ªÅu transaction.
C√≥ th·ªÉ persist entity m√† kh√¥ng c·∫ßn transaction, nh∆∞ng kh√¥ng th·ªÉ flush n·∫øu kh√¥ng c√≥ transaction.
