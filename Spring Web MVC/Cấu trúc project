https://viblo.asia/p/cau-truc-du-an-spring-boot-the-nao-cho-chuan-ORNZqdwbK0n
🔹 1. Nếu bạn làm Spring Boot (web động, dùng Thymeleaf hoặc REST API)
- Web động chỉ bất kỳ website nào có thể sinh nội dung thay đổi theo dữ liệu (ví dụ: lấy dữ liệu từ CSDL, đăng nhập, thêm sửa xóa...).
- Mô hình MVC (Model – View – Controller)
Thành phần	    Vai trò	                  Công nghệ tương ứng
Model	        Dữ liệu (entity, object)	@Entity, @Repository, JPA
View	        Giao diện hiển thị	      Thymeleaf, HTML, CSS
Controller	  Xử lý request/response	  @Controller, @GetMapping, @PostMapping

🔁 Luồng hoạt động (Spring Boot MVC):
1.Người dùng truy cập URL / → Controller (@GetMapping("/")).
2.Controller gọi Service / Repository để lấy dữ liệu.
3.Trả lại view (index.html hoặc index.html trong templates/).
4.View (Thymeleaf) hiển thị dữ liệu ra trình duyệt.

Cấu trúc chuẩn đúng nhất là:
Quan_Ly_SV/
├── src/
│   ├── main/
│   │   ├── java/
│   │   │   └── com/example/quanlysv/
│   │   │       ├── controller/
│   │   │       ├── service/
│   │   │       ├── repository/
│   │   │       └── model/
│   │   ├── resources/
│   │   │   ├── application.properties
│   │   │   ├── static/        ← chứa file tĩnh: CSS, JS, hình ảnh
│   │   │   └── templates/     ← chứa file HTML (nếu dùng Thymeleaf)
│   └── test/
│       └── java/
├── pom.xml
└── target/

.

🔹 2. Nếu bạn làm Servlet/JSP (Java Web cổ điển)
🔹 Đặc điểm:
- cùng là web động
- Mô hình 3 layer
- Sử dụng Servlet (Java code) để xử lý request.
- Sử dụng JSP để tạo giao diện web (HTML + Java code trộn lẫn).
- Có file cấu hình web.xml.
- Deploy thủ công lên Tomcat / GlassFish.
- Dự án thường có thư mục src/main/webapp/.

🧠 Mô hình 3 layer gồm:
Tầng	                                                  Vai trò	                            
Presentation layer (UI)                	Giao diện hiển thị, nhập dữ liệu (JSP, HTML, CSS, JS)	  index.jsp, form.jsp
Business layer (Service / Controller)	  Xử lý logic nghiệp vụ, điều hướng luồng xử lý	          SinhVienServlet.java
Data Access layer (DAO)	                Giao tiếp với CSDL (SQL, JDBC)	                        SinhVienDAO.java

🔁 Luồng hoạt động:
1.Người dùng nhập form HTML (hoặc JSP).
2.Gửi request đến Servlet (@WebServlet("/them-sv")).
3.Servlet lấy dữ liệu form → tạo SinhVien → gọi DAO.
4.DAO thực thi INSERT / SELECT bằng JDBC.
5.Servlet chuyển kết quả lại cho JSP hiển thị.

Khi đó cấu trúc lại là:

Quan_Ly_SV/
├── src/
│   └── main/
│       ├── java/
│       │   └── com/example/quanlysv/
│       │       ├── controller/
│       │       ├── model/
│       │       └── dao/
│       └── webapp/
│           ├── index.jsp
│           ├── WEB-INF/
│           │   └── web.xml
│           └── assets/
│               ├── css/
│               ├── js/
│               └── images/
├── pom.xml
└── target/

QuanLySinhVien/
├── src/
│   ├── main/
│   │   ├── java/
│   │   │   └── com/example/quanlysv/
│   │   │       └── AddSinhVienServlet.java   ← Servlet xử lý thêm SV
│   │   ├── resources/
│   │   └── webapp/
│   │       ├── index.html                    ← Form HTML
│   │       └── WEB-INF/web.xml               ← Cấu hình servlet
├── pom.xml                                   ← (nếu dùng Maven)
