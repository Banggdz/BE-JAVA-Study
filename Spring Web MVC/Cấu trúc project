🔹 1. Nếu bạn làm Spring Boot (web động, dùng Thymeleaf hoặc REST API)
Web động là khái niệm rộng hơn, chỉ bất kỳ website nào có thể sinh nội dung thay đổi theo dữ liệu (ví dụ: lấy dữ liệu từ CSDL, đăng nhập, thêm sửa xóa...).
Cấu trúc chuẩn đúng nhất là:

Quan_Ly_SV/
├── src/
│   ├── main/
│   │   ├── java/
│   │   │   └── com/example/quanlysv/
│   │   │       ├── controller/
│   │   │       ├── service/
│   │   │       ├── repository/
│   │   │       └── model/
│   │   ├── resources/
│   │   │   ├── application.properties
│   │   │   ├── static/        ← chứa file tĩnh: CSS, JS, hình ảnh
│   │   │   └── templates/     ← chứa file HTML (nếu dùng Thymeleaf)
│   └── test/
│       └── java/
├── pom.xml
└── target/

.

🔹 2. Nếu bạn làm Servlet/JSP (Java Web cổ điển)
🔹 Đặc điểm:
- cùng là web động
- Sử dụng Servlet (Java code) để xử lý request.
- Sử dụng JSP để tạo giao diện web (HTML + Java code trộn lẫn).
- Có file cấu hình web.xml.
- Deploy thủ công lên Tomcat / GlassFish.
- Dự án thường có thư mục src/main/webapp/.

Khi đó cấu trúc lại là:

Quan_Ly_SV/
├── src/
│   └── main/
│       ├── java/
│       │   └── com/example/quanlysv/
│       │       ├── controller/
│       │       ├── model/
│       │       └── dao/
│       └── webapp/
│           ├── index.jsp
│           ├── WEB-INF/
│           │   └── web.xml
│           └── assets/
│               ├── css/
│               ├── js/
│               └── images/
├── pom.xml
└── target/

QuanLySinhVien/
├── src/
│   ├── main/
│   │   ├── java/
│   │   │   └── com/example/quanlysv/
│   │   │       └── AddSinhVienServlet.java   ← Servlet xử lý thêm SV
│   │   ├── resources/
│   │   └── webapp/
│   │       ├── index.html                    ← Form HTML
│   │       └── WEB-INF/web.xml               ← Cấu hình servlet
├── pom.xml                                   ← (nếu dùng Maven)
